loadFile("classes/AssertRealEquality.mo"); getErrorString();
loadFile("classes/AssertVectorEquality.mo"); getErrorString();
loadFile("classes/CenterOfMass.mo"); getErrorString();
loadFile("classes/CompareReal.mo"); getErrorString();
loadFile("classes/CompareVectors.mo"); getErrorString();
loadFile("classes/Debug.mo"); getErrorString();
loadFile("classes/EdgesAreClose.mo"); getErrorString();
loadFile("classes/EdgesArray.mo"); getErrorString();
loadFile("classes/EdgesArrayAppend.mo"); getErrorString();
loadFile("classes/EdgesToVertices.mo"); getErrorString();
loadFile("classes/IsIncluded.mo"); getErrorString();
loadFile("classes/LineToSegment.mo"); getErrorString();
loadFile("classes/MarkUnwantedEdges.mo"); getErrorString();
loadFile("classes/Midpoint.mo"); getErrorString();
loadFile("classes/PerpendicularBisector.mo"); getErrorString();
loadFile("classes/PointsAreClose.mo"); getErrorString();
loadFile("classes/PointsArray.mo"); getErrorString();
loadFile("classes/PointsArrayAppend.mo"); getErrorString();
loadFile("classes/RemoveDuplicatedEdges.mo"); getErrorString();
loadFile("classes/RemoveMarkedEdges.mo"); getErrorString();
loadFile("classes/SegmentSlope.mo"); getErrorString();
loadFile("classes/SegmentsIntersection.mo"); getErrorString();
loadFile("classes/TargetPos.mo"); getErrorString();
loadFile("classes/ValuesAreClose.mo"); getErrorString();
loadFile("classes/VectorToString.mo"); getErrorString();
loadFile("classes/VoronoiCell.mo"); getErrorString();
loadFile("classes/sim_voronoi.mo"); getErrorString();
loadFile("classes/voronoi.mo"); getErrorString();
loadFile("test/test_CenterOfMass.mo"); getErrorString();
loadFile("test/test_CompareVectors.mo"); getErrorString();
loadFile("test/test_EdgesAreClose.mo"); getErrorString();
loadFile("test/test_EdgesToVertices.mo"); getErrorString();
loadFile("test/test_IsIncluded.mo"); getErrorString();
loadFile("test/test_LineToSegment.mo"); getErrorString();
loadFile("test/test_MarkUnwantedEdges.mo"); getErrorString();
loadFile("test/test_Midpoint.mo"); getErrorString();
loadFile("test/test_PerpendicularBisector.mo"); getErrorString();
loadFile("test/test_PointsAreClose.mo"); getErrorString();
loadFile("test/test_RemoveDuplicatedEdges.mo"); getErrorString();
loadFile("test/test_RemoveMarkedEdges.mo"); getErrorString();
loadFile("test/test_SegmentSlope.mo"); getErrorString();
loadFile("test/test_SegmentsIntersection.mo"); getErrorString();
loadFile("test/test_TargetPos.mo"); getErrorString();
loadFile("test/test_ValuesAreClose.mo"); getErrorString();
loadFile("test/test_VoronoiCell.mo"); getErrorString();
cd("/tmp");
simulate(test_PerpendicularBisector); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_EdgesToVertices); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_PointsAreClose); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_SegmentsIntersection); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_EdgesAreClose); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_TargetPos); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_LineToSegment); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_SegmentSlope); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_RemoveDuplicatedEdges); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_CompareVectors); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_CenterOfMass); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_RemoveMarkedEdges); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_Midpoint); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_ValuesAreClose); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_MarkUnwantedEdges); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_VoronoiCell); getErrorString();
print("--------------------------------------------------------------------");
simulate(test_IsIncluded); getErrorString();
print("--------------------------------------------------------------------");
